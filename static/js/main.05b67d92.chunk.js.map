{"version":3,"sources":["axiosInstance.js","store/actions/loader.actions.js","store/actionsConst.js","Components/List.js","Components/Loader.js","Containers/Users.js","store/actions/users.actions.js","Components/Layout.js","Containers/Posts.js","store/actions/posts.actions.js","Containers/Albums.js","store/actions/albums.actions.js","store/reducers/posts.reducers.js","store/reducers/albums.reducers.js","store/reducers/users.reducers.js","store/index.js","store/reducers/loader.reducers.js","store/reducers/error.reducers.js","serviceWorker.js","index.js","App.js"],"names":["axios","create","baseURL","setLoading","loading","type","payload","List","children","className","Loader","Users","viewAlbum","id","props","history","push","this","fetchUsers","users","userList","map","user","name","email","to","length","Component","mapsDispatchToProps","userId","dispatch","getState","get","then","response","data","catch","connect","withRouter","title","style","fontSize","color","marginRight","Post","fetchPosts","match","params","posts","postList","post","i","method","url","Albums","fetchAlbums","albums","albumList","album","defaultState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","state","action","error","applyMiddleware","thunk","Boolean","location","hostname","ReactDOM","render","store","exact","path","component","Posts","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05b67d92.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL:\"https://jsonplaceholder.typicode.com/\"\n});","import * as actionConst from '../actionsConst';\n\nexport const setLoading =  (loading)=>{\n    return {\n        type: actionConst.SET_LOADER,\n        payload: loading\n    }\n//     return dispatch=>{\n//        dispatch({\n//         type: actionConst.SET_LOADER,\n//         payload: loading\n//     })   \n// } \n}   \n","//USERS\nexport const FETCH_USERS = \"FETCH_USERS\";\n\n\n//ALBUMS\nexport const FETCH_ALBUMS = \"FETCH_ALBUMS\";\n\n\n//POST\nexport const FETCH_POSTS = \"FETCH_POSTS\";\n\n\n//LOADER\nexport const SET_LOADER = \"SET_LOADER\";\n\n\n//ERROR\nexport const SET_ERROR = \"SET_ERROR\";\n\n","import React from 'react'\n\nexport default function List({children}) {\n    return (\n        <div className=\"list\">\n           {children}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Loader({loading, children}) {\n    return (\n       !loading ? <div className=\"loader\"> <h2>Loading...</h2></div> : children\n    )\n}\n","import React,{Component} from 'react';\nimport {fetchUsers} from '../store/actions/users.actions';\nimport {setLoading} from '../store/actions/loader.actions';\nimport List from '../Components/List';\nimport Loader from '../Components/Loader';\nimport {connect} from 'react-redux';\nimport {Link} from \"react-router-dom\";\nclass Users extends Component {\n\n\n    componentDidMount(){\n      this.props.fetchUsers();\n    }\n\n    viewAlbum = (id)=>{\n      this.props.history.push(`/users/${id}/albums`);      \n    }\n    \n   render(){\n        const {users, loading} = this.props;\n        \n        const userList = users.map((user)=><List>\n            <h2>\n                {user.name}\n            </h2>\n            <h3>\n                {user.email}\n            </h3>\n            <Link to={`/users/${user.id}/albums`}> View Albums </Link>\n            <Link to={`/users/${user.id}/posts`}> View Posts </Link>\n            \n            </List>\n        )\n       return <Loader loading={users.length}>\n         <h2 className=\"header\">Users</h2>\n        {userList}\n    </Loader>\n   }\n    \n\n}\n\nconst mapStateToProps = ({loading, users})=>{\n    return {\n      loading,\n      users\n    }\n};\n\n  \nconst mapsDispatchToProps = {\n    fetchUsers,\n    setLoading\n}\n\nexport default connect(mapStateToProps,mapsDispatchToProps)(Users);","import * as actionConst from '../actionsConst';\nimport axios from '../../axiosInstance';\nimport { setLoading } from './loader.actions';\n\n\nexport const fetchUsers =  (userId)=>{\n    return (dispatch,getState)=>{\n        axios.get('/users')\n        .then((response)=>{\n            dispatch({\n                type:actionConst.FETCH_USERS,\n                payload: response.data \n            });\n            dispatch(setLoading(false));\n        })\n        .catch(({response})=>{\n            dispatch(setLoading(false));\n            dispatch({\n                type:actionConst.SET_ERROR,\n                payload: \"Some Error Occurred\"\n            });\n        });\n    }   \n}","import React from 'react';\nimport { withRouter} from 'react-router-dom';\nimport {Link} from \"react-router-dom\";\n\nfunction Layout({title,children}) {\n    return (\n        <div>\n        <header>\n           <Link to=\"/\"><i className=\"fa fa-home\" style={{fontSize:\"54px\", color:'black', marginRight: \"30px\"}}></i></Link>\n            <h2 className=\"header\">{title}</h2>\n        </header>\n        {children}\n        </div>\n    )\n}\n\nexport default withRouter(Layout);\n","import React, { Component } from 'react';\nimport Loader from '../Components/Loader';\nimport Layout from '../Components/Layout';\nimport axious from '../axiosInstance';\nimport {fetchPosts} from '../store/actions/posts.actions';\nimport {setLoading} from '../store/actions/loader.actions';\nimport List from '../Components/List';\nimport {connect} from 'react-redux';\n\nclass Post extends Component {\n    \n    componentDidMount(){\n        this.props.fetchPosts(this.props.match.params.userId);\n    }\n    render() {\n        const {posts, loading} = this.props;\n        const postList = posts.map((post,i)=><List>\n            <h3>\n            {i+1}. {post.title}\n            </h3>\n            </List>\n        )\n\n        return (\n            <Loader loading={posts.length}>\n            <Layout title=\"Posts\">\n            {postList}\n            </Layout>\n                \n            </Loader>\n        )\n    }\n}\nconst mapStateToProps = ({loading, posts})=>{\n    return {\n      loading,\n      posts\n    }\n};\n\n  \nconst mapsDispatchToProps = {\n    fetchPosts,\n    setLoading\n}\n\nexport default connect(mapStateToProps,mapsDispatchToProps)(Post);","import * as actionConst from '../actionsConst';\nimport axios from '../../axiosInstance';\n\n\nexport const fetchPosts =  (userId)=>{\n    return (dispatch,getState)=>{\n        \n        axios({\n            method:'get',\n            url:'/posts',\n            params:{userId}\n        })\n        .then((response)=>{\n            dispatch({\n                type:actionConst.FETCH_POSTS,\n                payload: response.data \n            });\n        })\n        .catch(({response})=>{\n            dispatch({\n                type:actionConst.SET_ERROR,\n                payload: \"Some Error Occurred\"\n            });\n        });\n    }   \n}","import React, { Component } from 'react';\nimport Loader from '../Components/Loader';\nimport axious from '../axiosInstance';\nimport {fetchAlbums} from '../store/actions/albums.actions';\nimport {setLoading} from '../store/actions/loader.actions';\nimport List from '../Components/List';\nimport Layout from '../Components/Layout';\nimport {connect} from 'react-redux';\n\nclass Albums extends Component {\n    \n    componentDidMount(){\n        this.props.fetchAlbums(this.props.match.params.userId);\n    }\n\n    render() {\n        const {albums, loading} = this.props;\n        const albumList = albums.map((album,i)=><List>\n            <h3>\n              {i+1}.  {album.title}\n            </h3>\n            </List>\n        )\n        return (\n            <Loader loading={albums.length}>\n          <Layout title=\"Albums\">\n            {albumList}\n            </Layout>\n            </Loader>\n        )\n    }\n}\nconst mapStateToProps = ({loading, albums})=>{\n    return {\n      loading,\n      albums\n    }\n};\n\n  \nconst mapsDispatchToProps = {\n    fetchAlbums,\n    setLoading\n}\n\nexport default connect(mapStateToProps,mapsDispatchToProps)(Albums);","import * as actionConst from '../actionsConst';\nimport axios from '../../axiosInstance';\n\nexport const fetchAlbums =  (userId)=>{\n    return (dispatch,getState)=>{\n        \n        axios({\n            method:'get',\n            url:'/albums',\n            params:{userId}\n        })\n        .then((response)=>{\n            dispatch({\n                type:actionConst.FETCH_ALBUMS,\n                payload: response.data \n            });\n        })\n        .catch(({response})=>{\n            dispatch({\n                type:actionConst.SET_ERROR,\n                payload: \"Some Error Occurred\"\n            });\n        });\n    }   \n}","import * as actionsConst from '../actionsConst';\n\nconst defaultState = [];\n\nexport default (state=defaultState,action)=>{\n    switch(action.type){\n        case actionsConst.FETCH_POSTS:\n            return [...action.payload]\n        default:\n            return state;\n    }\n}","import * as actionsConst from '../actionsConst';\n\nconst defaultState = [];\n\nexport default (state=defaultState,action)=>{\n    switch(action.type){\n        case actionsConst.FETCH_ALBUMS:\n            return [...action.payload]\n        default:\n            return state;\n    }\n}","import * as actionsConst from '../actionsConst';\n\nconst defaultState = [];\n\nexport default (state=defaultState,action)=>{\n    switch(action.type){\n        case actionsConst.FETCH_USERS:\n            return [...action.payload]\n        default:\n            return state;\n    }\n}","import {createStore,applyMiddleware,compose, combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport postsReducer from './reducers/posts.reducers';\nimport albumsReducer from './reducers/albums.reducers';\nimport usersReducer from './reducers/users.reducers';\nimport loaderReducer from './reducers/loader.reducers';\nimport errorReducer from './reducers/error.reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nexport default createStore(combineReducers({\n    posts: postsReducer,\n    albums: albumsReducer,\n    users: usersReducer,\n    loading: loaderReducer,\n    error: errorReducer\n}),composeEnhancers(applyMiddleware(thunk)));","import * as actionsConst from '../actionsConst';\n\nconst defaultState = false;\n\nexport default (state=defaultState,action)=>{\n    switch(action.type){\n        case actionsConst.SET_LOADER:\n            return action.payload\n        default:\n            return state;\n    }\n}","import * as actionsConst from '../actionsConst';\n\nconst defaultState = \"\";\n\nexport default (state=defaultState,action)=>{\n    switch(action.type){\n        case actionsConst.SET_ERROR:\n            return action.payload\n        default:\n            return state;\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Users from './Containers/Users';\nimport Posts from './Containers/Posts';\nimport Albums from './Containers/Albums';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nexport default ()=>{\n    return (\n      <div className=\"App\">     \n       <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/users/:userId/posts\" component={Posts}/>\n            <Route exact path=\"/users/:userId/albums\" component={Albums}/>\n          <Route path=\"/\"  component={Users} />\n            \n            <Redirect to=\"/\"/>\n                  \n          </Switch> \n        </BrowserRouter>   \n      </Provider>\n      </div>\n    );\n  }\n"],"sourceRoot":""}